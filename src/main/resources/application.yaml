server:
  port: 8081
spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost:5432/order_db}
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  application:
    name: ORDER-SERVICE
  config:
    import:
      configserver:${CONFIG_SERVER_URL:http://localhost:9296}
  security:
    oauth2:
      client:
        registration:
          okta:
            client-id: 0oaf1kz9cpI7vpqtl5d7
            client-secret: KnWDwRBAzV-OQRRV0072XwNEfaotr_07Evpbs28yK3ul6vdD4Az9__xwd8d9VBxA
            scope: internal
        provider:
          okta:
            issuer-uri: https://dev-43724657.okta.com/oauth2/default
      resourceserver:
        jwt:
          issuer-uri: https://dev-43724657.okta.com/oauth2/default
    liquibase:
      change-log: classpath:db/changelog/db.changelog-master.yaml
logging:
  level:
    org:
      springframework: info

